using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class MalwareReport : MonoBehaviour
{
    public Dropdown suggest_dropDown;

    public MalwareReportClass[] optionA;

    public MalwareReportClass[] optionB;

    public MalwareReportClass[] optionC;

    private int valueA;

    private int valueB;

    private int valueC;

    private int virusCount;

    private int trojanCount;

    private int adwareCount;

    private void OnEnable()
    {
        valueA = 0;
        valueB = 0;
        valueC = 0;
    }

    public void HandleInputData_A(int value)
    {
        valueA = value;
        UpdateValueChange();
    }

    public void HandleInputData_B(int value)
    {
        valueB = value;
        UpdateValueChange();
    }

    public void HandleInputData_C(int value)
    {
        valueC = value;
        UpdateValueChange();
    }

    private void UpdateValueChange()
    {
        int i = 0;
        List<MalwareType> iSuggest = new List<MalwareType>();
        List<MalwareReportClass> iSymptom = new List<MalwareReportClass>();
        if (valueA != 0)
        {
            iSymptom.Add(optionA[valueA]);
            i++;
        }
        if (valueB != 0)
        {
            iSymptom.Add(optionB[valueB]);
            i++;
        }
        if (valueC != 0)
        {
            iSymptom.Add(optionC[valueC]);
            i++;
        }
        if (i < 2) return;

        virusCount = 0;
        trojanCount = 0;
        adwareCount = 0;
        foreach (MalwareReportClass item in iSymptom)
        {
            switch (item.type1)
            {
                case MalwareType.Virus:
                    virusCount++;
                    break;
                case MalwareType.Trojan:
                    trojanCount++;
                    break;
                case MalwareType.Adware:
                    adwareCount++;
                    break;
                default:
                    break;
            }
            switch (item.type2)
            {
                case MalwareType.Virus:
                    virusCount++;
                    break;
                case MalwareType.Trojan:
                    trojanCount++;
                    break;
                case MalwareType.Adware:
                    adwareCount++;
                    break;
                default:
                    break;
            }
        }
        ChangeSuggestion();
    }

    private void ChangeSuggestion()
    {
        int[] arr = { virusCount, trojanCount, adwareCount };
        int highest = -1;
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] > highest)
            {
                highest = i;
            }
        }

        suggest_dropDown.options.Clear();
       
    }
}

[System.Serializable]
public class MalwareReportClass
{
    public MalwareType type1;

    public MalwareType type2;
}
